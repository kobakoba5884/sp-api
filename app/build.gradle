/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java application project to get you started.
 * For more details take a look at the 'Building Java & JVM projects' chapter in the Gradle
 * User Manual available at https://docs.gradle.org/7.3/userguide/building_java_projects.html
 */


plugins {
  // Apply the application plugin to add support for building a CLI application in Java.
  id 'application'
  id "org.jsonschema2pojo" version "1.2.0"
}

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
    mavenLocal()
}

dependencies {
  // Use JUnit Jupiter for testing.
  testImplementation 'org.junit.jupiter:junit-jupiter:5.7.2'

  // This dependency is used by the application.
  implementation 'com.google.guava:guava:30.1.1-jre'

  // Required if generating JSR-303 annotations
  implementation 'jakarta.validation:jakarta.validation-api:3.0.0'
  // Required if generating Jackson 2 annotations
  implementation 'com.fasterxml.jackson.core:jackson-databind:2.18.1'
}

application {
  // Define the main class for the application.
  mainClass = 'sp.api.App'
}

jsonSchema2Pojo {
  // Location of the JSON Schema file(s). This may refer to a single file or a directory of files.
  source = files("${sourceSets.main.output.resourcesDir}/json")

  // Target directory for generated Java source files. The plugin will add this directory to the
  // java source set so the compiler will find and compile the newly generated source files.
  targetDirectory = file("${project.buildDir}/generated-sources/js2p")

  targetPackage = 'com.amazon.sellingpartnerapi.schemas'

  generateBuilders = true

  useJakartaValidation = true

  useTitleAsClassname = true

  removeOldOutput = true
}


tasks.named('test') {
  // Use JUnit Platform for unit tests.
  useJUnitPlatform()
}
